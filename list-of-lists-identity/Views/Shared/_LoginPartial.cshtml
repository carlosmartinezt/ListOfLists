@using Microsoft.AspNetCore.Identity
@using IdentityServer4.Extensions

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


@{
    string name = null;
    if (!true.Equals(ViewData["signed-out"]))
    {
        name = Context.User?.GetDisplayName();
    }
}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index"
                title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
        @* @if (!string.IsNullOrWhiteSpace(name))
            {
            <ul class="navbar-nav mr-auto">
            <li class="nav-item dropdown">
            <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown">@name <b class="caret"></b></a>

            <div class="dropdown-menu">
            <a class="dropdown-item" asp-action="Logout" asp-controller="Account">Logout</a>
            </div>
            </li>
            </ul>
            } *@
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
